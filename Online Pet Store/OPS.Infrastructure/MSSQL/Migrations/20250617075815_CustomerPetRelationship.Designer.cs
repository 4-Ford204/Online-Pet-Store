// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OPS.Infrastructure.MSSQL;

#nullable disable

namespace OPS.Infrastructure.MSSQL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250617075815_CustomerPetRelationship")]
    partial class CustomerPetRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OPS.Domain.Entities.Breed", b =>
                {
                    b.Property<int>("BreedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreedID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpeciesID")
                        .HasColumnType("int");

                    b.HasKey("BreedID");

                    b.HasIndex("SpeciesID");

                    b.ToTable("Breeds", (string)null);
                });

            modelBuilder.Entity("OPS.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("OPS.Domain.Entities.Pet", b =>
                {
                    b.Property<int>("PetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetID"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("BreedID")
                        .HasColumnType("int");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("PetID");

                    b.HasIndex("BreedID");

                    b.HasIndex("OwnerId");

                    b.ToTable("Pets", (string)null);
                });

            modelBuilder.Entity("OPS.Domain.Entities.Species", b =>
                {
                    b.Property<int>("SpeciesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpeciesID");

                    b.ToTable("Species", (string)null);
                });

            modelBuilder.Entity("OPS.Domain.Entities.Breed", b =>
                {
                    b.HasOne("OPS.Domain.Entities.Species", "Species")
                        .WithMany("Breeds")
                        .HasForeignKey("SpeciesID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Species");
                });

            modelBuilder.Entity("OPS.Domain.Entities.Pet", b =>
                {
                    b.HasOne("OPS.Domain.Entities.Breed", "Breed")
                        .WithMany("Pets")
                        .HasForeignKey("BreedID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("OPS.Domain.Entities.Customer", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Breed");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("OPS.Domain.Entities.Breed", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("OPS.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("OPS.Domain.Entities.Species", b =>
                {
                    b.Navigation("Breeds");
                });
#pragma warning restore 612, 618
        }
    }
}
